{
  "contractName": "PublicAmbix",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "A",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "B",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "M",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "N",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_a",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_n",
          "type": "uint256[]"
        }
      ],
      "name": "appendSource",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_b",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_m",
          "type": "uint256[]"
        }
      ],
      "name": "setSink",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ix",
          "type": "uint256"
        }
      ],
      "name": "run",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"A\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"B\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"M\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"N\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_a\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_n\",\"type\":\"uint256[]\"}],\"name\":\"appendSource\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ix\",\"type\":\"uint256\"}],\"name\":\"run\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_b\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_m\",\"type\":\"uint256[]\"}],\"name\":\"setSink\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"appendSource(address[],uint256[])\":{\"details\":\"Append token recipe source alternative\",\"params\":{\"_a\":\"Token recipe source token addresses\",\"_n\":\"Token recipe source token counts*\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"run(uint256)\":{\"details\":\"Run distillation process\",\"params\":{\"_ix\":\"Source alternative index\"}},\"setSink(address[],uint256[])\":{\"details\":\"Set sink of token recipe\",\"params\":{\"_b\":\"Token recipe sink token list\",\"_m\":\"Token recipe sink token counts\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/misc/PublicAmbix.sol\":\"PublicAmbix\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzz-raw://f07a2c393caa85f62f0aaa461e3edd50aa59371d4209778ba0558d7f8b4b856c\",\"dweb:/ipfs/QmeN3ZiYGSjCnQFeYaJNgoXjF9eDue1g3e9pqManRkeBtV\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzz-raw://f40c91ca270bdc9b156f339081a0fc2bbcf73cf5f62b8c73ba555df753ff6619\",\"dweb:/ipfs/QmT8y2VVjGaFdGphpcXrgvdPi2EgF9LuCDgJiJ89LvpFRV\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa3e68fd7f987c8fbdaf4867d428a69a15f3cf2f69709a5b0a0fbef750b0e6fbc\",\"urls\":[\"bzz-raw://50b1ff986d3b2793850a66c8429d9886fdfb134b1509b3e98714e3e2a71e24f5\",\"dweb:/ipfs/QmSQBYPeY9tbR3ciGRNQqvcWKnNiuxtVMq2MsPWpLwuGGm\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzz-raw://ee762ff5b7746e41d27dcbcea00c7a3034b58adb1b45ddadddb5b721aff450df\",\"dweb:/ipfs/QmdxqtgEFZjHCoiYyz6pUAQ5iBm7As25jcyEbZoTaAgyDa\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x05fcee7431cd35cd312e14e7f316a44ca3ccc5fb3b859aefc15c1a5db94add7e\",\"urls\":[\"bzz-raw://89cd8373a742508c62708e03c970605ee326f1aafdb159d57a4c20c9d60963fc\",\"dweb:/ipfs/QmZBWbRwAD7ChE8Dsqo4rm7ubtGtDL1bjkAVVq6dVPmVwk\"]},\"project:/contracts/misc/AbstractAmbix.sol\":{\"keccak256\":\"0x7c91ca770d7f4559368e1bc1e2128dd812832359c6b6e02a65dfd924aa567443\",\"urls\":[\"bzz-raw://272eda3b637b8abc62fad1482f7b7d9fda623017846f870cf3b5ff0acc15b9b9\",\"dweb:/ipfs/QmcfrCp9CPySFBhTuMiqdbnmHoMgLtVTioj1mALuYzsdnd\"]},\"project:/contracts/misc/PublicAmbix.sol\":{\"keccak256\":\"0xf12110b0258744161552a5d197caa9f24d910db77a99cec0f066c1c6f21f4369\",\"urls\":[\"bzz-raw://98c526403e1c37bba411bd4d194f99c01ebbf7a6b5d88228d250c0144a48cc62\",\"dweb:/ipfs/Qmcxb5t6r3iPxfoX2oBnSdEByQ461eYZGYMztNjmMAZha5\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a361149a806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638f32d59b116100715780638f32d59b14610316578063a444f5e914610338578063d6c8552914610366578063dac0eb07146103a8578063f2fde38b14610416578063fdbacf5a1461045a576100a9565b80634898722d146100ae57806355c0a5f41461017c578063715018a61461024a57806383f86eb2146102545780638da5cb5b146102cc575b600080fd5b61017a600480360360408110156100c457600080fd5b81019080803590602001906401000000008111156100e157600080fd5b8201836020820111156100f357600080fd5b8035906020019184602083028401116401000000008311171561011557600080fd5b90919293919293908035906020019064010000000081111561013657600080fd5b82018360208201111561014857600080fd5b8035906020019184602083028401116401000000008311171561016a57600080fd5b90919293919293905050506104a6565b005b6102486004803603604081101561019257600080fd5b81019080803590602001906401000000008111156101af57600080fd5b8201836020820111156101c157600080fd5b803590602001918460208302840111640100000000831117156101e357600080fd5b90919293919293908035906020019064010000000081111561020457600080fd5b82018360208201111561021657600080fd5b8035906020019184602083028401116401000000008311171561023857600080fd5b9091929391929390505050610572565b005b61025261072b565b005b61028a6004803603604081101561026a57600080fd5b8101908080359060200190929190803590602001909291905050506107fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102d461084f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61031e610878565b604051808215151515815260200191505060405180910390f35b6103646004803603602081101561034e57600080fd5b81019080803590602001909291905050506108cf565b005b6103926004803603602081101561037c57600080fd5b81019080803590602001909291905050506108db565b6040518082815260200191505060405180910390f35b6103d4600480360360208110156103be57600080fd5b81019080803590602001909291905050506108fc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104586004803603602081101561042c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610938565b005b6104906004803603604081101561047057600080fd5b810190808035906020019092919080359060200190929190505050610955565b6040518082815260200191505060405180910390f35b6104ae610878565b6104b757600080fd5b8181905084849050146104c957600080fd5b60008090505b8484905081101561054757600073ffffffffffffffffffffffffffffffffffffffff168585838181106104fe57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561053c57600080fd5b8060010190506104cf565b50838360039190610559929190611310565b5081816004919061056b9291906113b0565b5050505050565b61057a610878565b61058357600080fd5b6000828290508585905014801561059d5750600085859050115b6105a657600080fd5b600090505b8484905081101561062357600073ffffffffffffffffffffffffffffffffffffffff168585838181106105da57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561061857600080fd5b8060010190506105ab565b600183839050148015610649575060008383600081811061064057fe5b90506020020135145b156106655760016003805490501461066057600080fd5b6106a0565b600090505b8282905081101561069f57600083838381811061068357fe5b905060200201351161069457600080fd5b80600101905061066a565b5b60018585909180600181540180825580915050906001820390600052602060002001600090919293909192939091929091925091906106e0929190611310565b505060028383909180600181540180825580915050906001820390600052602060002001600090919293909192939091929091925091906107229291906113b0565b50505050505050565b610733610878565b61073c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6001828154811061080857fe5b90600052602060002001818154811061081d57fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6108d88161098c565b50565b600481815481106108e857fe5b906000526020600020016000915090505481565b6003818154811061090957fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610940610878565b61094957600080fd5b61095281611148565b50565b6002828154811061096257fe5b90600052602060002001818154811061097757fe5b90600052602060002001600091509150505481565b600180549050811061099d57600080fd5b600080600283815481106109ad57fe5b906000526020600020016000815481106109c357fe5b90600052602060002001541115610d3d576000600283815481106109e357fe5b906000526020600020016000815481106109f957fe5b906000526020600020015460018481548110610a1157fe5b90600052602060002001600081548110610a2757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610b0257600080fd5b505afa158015610b16573d6000803e3d6000fd5b505050506040513d6020811015610b2c57600080fd5b810190808051906020019092919050505081610b4457fe5b04905060008111610b5457600080fd5b600091505b60018381548110610b6657fe5b9060005260206000200180549050821015610c9f5760018381548110610b8857fe5b906000526020600020018281548110610b9d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc67903360028681548110610bf157fe5b906000526020600020018581548110610c0657fe5b906000526020600020015484026040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610c7c57600080fd5b505af1158015610c90573d6000803e3d6000fd5b50505050816001019150610b59565b600091505b600380549050821015610d3757610d2c338260048581548110610cc357fe5b90600052602060002001540260038581548110610cdc57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112409092919063ffffffff16565b816001019150610ca4565b50611144565b6001808381548110610d4b57fe5b9060005260206000200180549050148015610d6b57506001600380549050145b610d7457600080fd5b600060018381548110610d8357fe5b90600052602060002001600081548110610d9957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006003600081548110610dd657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e4b57600080fd5b505afa158015610e5f573d6000803e3d6000fd5b505050506040513d6020811015610e7557600080fd5b81019080805190602001909291905050508273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d6020811015610f2d57600080fd5b8101908080519060200190929190505050670de0b6b3a76400000281610f4f57fe5b04905060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561100557600080fd5b505afa158015611019573d6000803e3d6000fd5b505050506040513d602081101561102f57600080fd5b810190808051906020019092919050505090506000811161104f57600080fd5b8373ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156110d657600080fd5b505af11580156110ea573d6000803e3d6000fd5b505050506000670de0b6b3a76400008284028161110357fe5b0490506000811161111357600080fd5b61113e33828673ffffffffffffffffffffffffffffffffffffffff166112409092919063ffffffff16565b50505050505b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561118257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112c757600080fd5b505af11580156112db573d6000803e3d6000fd5b505050506040513d60208110156112f157600080fd5b810190808051906020019092919050505061130b57600080fd5b505050565b82805482825590600052602060002090810192821561139f579160200282015b8281111561139e57823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611330565b5b5090506113ac91906113fd565b5090565b8280548282559060005260206000209081019282156113ec579160200282015b828111156113eb5782358255916020019190600101906113d0565b5b5090506113f99190611440565b5090565b61143d91905b8082111561143957600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101611403565b5090565b90565b61146291905b8082111561145e576000816000905550600101611446565b5090565b9056fea265627a7a72315820b807c684ba7ed144e2db7d116af346fa4753b501d5ee99c375ca66237be13e5164736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80638f32d59b116100715780638f32d59b14610316578063a444f5e914610338578063d6c8552914610366578063dac0eb07146103a8578063f2fde38b14610416578063fdbacf5a1461045a576100a9565b80634898722d146100ae57806355c0a5f41461017c578063715018a61461024a57806383f86eb2146102545780638da5cb5b146102cc575b600080fd5b61017a600480360360408110156100c457600080fd5b81019080803590602001906401000000008111156100e157600080fd5b8201836020820111156100f357600080fd5b8035906020019184602083028401116401000000008311171561011557600080fd5b90919293919293908035906020019064010000000081111561013657600080fd5b82018360208201111561014857600080fd5b8035906020019184602083028401116401000000008311171561016a57600080fd5b90919293919293905050506104a6565b005b6102486004803603604081101561019257600080fd5b81019080803590602001906401000000008111156101af57600080fd5b8201836020820111156101c157600080fd5b803590602001918460208302840111640100000000831117156101e357600080fd5b90919293919293908035906020019064010000000081111561020457600080fd5b82018360208201111561021657600080fd5b8035906020019184602083028401116401000000008311171561023857600080fd5b9091929391929390505050610572565b005b61025261072b565b005b61028a6004803603604081101561026a57600080fd5b8101908080359060200190929190803590602001909291905050506107fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102d461084f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61031e610878565b604051808215151515815260200191505060405180910390f35b6103646004803603602081101561034e57600080fd5b81019080803590602001909291905050506108cf565b005b6103926004803603602081101561037c57600080fd5b81019080803590602001909291905050506108db565b6040518082815260200191505060405180910390f35b6103d4600480360360208110156103be57600080fd5b81019080803590602001909291905050506108fc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104586004803603602081101561042c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610938565b005b6104906004803603604081101561047057600080fd5b810190808035906020019092919080359060200190929190505050610955565b6040518082815260200191505060405180910390f35b6104ae610878565b6104b757600080fd5b8181905084849050146104c957600080fd5b60008090505b8484905081101561054757600073ffffffffffffffffffffffffffffffffffffffff168585838181106104fe57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561053c57600080fd5b8060010190506104cf565b50838360039190610559929190611310565b5081816004919061056b9291906113b0565b5050505050565b61057a610878565b61058357600080fd5b6000828290508585905014801561059d5750600085859050115b6105a657600080fd5b600090505b8484905081101561062357600073ffffffffffffffffffffffffffffffffffffffff168585838181106105da57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561061857600080fd5b8060010190506105ab565b600183839050148015610649575060008383600081811061064057fe5b90506020020135145b156106655760016003805490501461066057600080fd5b6106a0565b600090505b8282905081101561069f57600083838381811061068357fe5b905060200201351161069457600080fd5b80600101905061066a565b5b60018585909180600181540180825580915050906001820390600052602060002001600090919293909192939091929091925091906106e0929190611310565b505060028383909180600181540180825580915050906001820390600052602060002001600090919293909192939091929091925091906107229291906113b0565b50505050505050565b610733610878565b61073c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6001828154811061080857fe5b90600052602060002001818154811061081d57fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6108d88161098c565b50565b600481815481106108e857fe5b906000526020600020016000915090505481565b6003818154811061090957fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610940610878565b61094957600080fd5b61095281611148565b50565b6002828154811061096257fe5b90600052602060002001818154811061097757fe5b90600052602060002001600091509150505481565b600180549050811061099d57600080fd5b600080600283815481106109ad57fe5b906000526020600020016000815481106109c357fe5b90600052602060002001541115610d3d576000600283815481106109e357fe5b906000526020600020016000815481106109f957fe5b906000526020600020015460018481548110610a1157fe5b90600052602060002001600081548110610a2757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610b0257600080fd5b505afa158015610b16573d6000803e3d6000fd5b505050506040513d6020811015610b2c57600080fd5b810190808051906020019092919050505081610b4457fe5b04905060008111610b5457600080fd5b600091505b60018381548110610b6657fe5b9060005260206000200180549050821015610c9f5760018381548110610b8857fe5b906000526020600020018281548110610b9d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc67903360028681548110610bf157fe5b906000526020600020018581548110610c0657fe5b906000526020600020015484026040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610c7c57600080fd5b505af1158015610c90573d6000803e3d6000fd5b50505050816001019150610b59565b600091505b600380549050821015610d3757610d2c338260048581548110610cc357fe5b90600052602060002001540260038581548110610cdc57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112409092919063ffffffff16565b816001019150610ca4565b50611144565b6001808381548110610d4b57fe5b9060005260206000200180549050148015610d6b57506001600380549050145b610d7457600080fd5b600060018381548110610d8357fe5b90600052602060002001600081548110610d9957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006003600081548110610dd657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e4b57600080fd5b505afa158015610e5f573d6000803e3d6000fd5b505050506040513d6020811015610e7557600080fd5b81019080805190602001909291905050508273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d6020811015610f2d57600080fd5b8101908080519060200190929190505050670de0b6b3a76400000281610f4f57fe5b04905060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561100557600080fd5b505afa158015611019573d6000803e3d6000fd5b505050506040513d602081101561102f57600080fd5b810190808051906020019092919050505090506000811161104f57600080fd5b8373ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156110d657600080fd5b505af11580156110ea573d6000803e3d6000fd5b505050506000670de0b6b3a76400008284028161110357fe5b0490506000811161111357600080fd5b61113e33828673ffffffffffffffffffffffffffffffffffffffff166112409092919063ffffffff16565b50505050505b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561118257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112c757600080fd5b505af11580156112db573d6000803e3d6000fd5b505050506040513d60208110156112f157600080fd5b810190808051906020019092919050505061130b57600080fd5b505050565b82805482825590600052602060002090810192821561139f579160200282015b8281111561139e57823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611330565b5b5090506113ac91906113fd565b5090565b8280548282559060005260206000209081019282156113ec579160200282015b828111156113eb5782358255916020019190600101906113d0565b5b5090506113f99190611440565b5090565b61143d91905b8082111561143957600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101611403565b5090565b90565b61146291905b8082111561145e576000816000905550600101611446565b5090565b9056fea265627a7a72315820b807c684ba7ed144e2db7d116af346fa4753b501d5ee99c375ca66237be13e5164736f6c63430005100032",
  "sourceMap": "56:203:21:-;;;524:10:6;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;56:203:21;;;;;;",
  "deployedSourceMap": "56:203:21:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;56:203:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2009:275:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2009:275:18;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2009:275:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2009:275:18;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2009:275:18;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2009:275:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2009:275:18;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2009:275:18;;;;;;;;;;;;:::i;:::-;;1350:506;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1350:506:18;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1350:506:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1350:506:18;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1350:506:18;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1350:506:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1350:506:18;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1350:506:18;;;;;;;;;;;;:::i;:::-;;1347:137:6;;;:::i;:::-;;1078:20:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1078:20:18;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;659:77:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;196:61:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;196:61:21;;;;;;;;;;;;;;;;;:::i;:::-;;1154:18:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1154:18:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1130:18:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1655:107:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;1104:20:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1104:20:18;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2009:275;863:9:6;:7;:9::i;:::-;855:18;;;;;;2143:2:18;;:9;;2130:2;;:9;;:22;2122:31;;;;;;2169:9;2181:1;2169:13;;2164:80;2188:2;;:9;;2184:1;:13;2164:80;;;2241:1;2224:19;;:2;;2227:1;2224:5;;;;;;;;;;;;;;;:19;;;;2216:28;;;;;;2199:3;;;;;2164:80;;;;2259:2;;2255:1;:6;;;;;;;:::i;:::-;;2275:2;;2271:1;:6;;;;;;;:::i;:::-;;2009:275;;;;:::o;1350:506::-;863:9:6;:7;:9::i;:::-;855:18;;;;;;1469:9:18;1510:2;;:9;;1497:2;;:9;;:22;:39;;;;;1535:1;1523:2;;:9;;:13;1497:39;1489:48;;;;;;1557:1;1553:5;;1548:72;1564:2;;:9;;1560:1;:13;1548:72;;;1617:1;1600:19;;:2;;1603:1;1600:5;;;;;;;;;;;;;;;:19;;;;1592:28;;;;;;1575:3;;;;;1548:72;;;1648:1;1635:2;;:9;;:14;:28;;;;;1662:1;1653:2;;1656:1;1653:5;;;;;;;;;;;;;:10;1635:28;1631:178;;;1699:1;1687;:8;;;;:13;1679:22;;;;;;1631:178;;;1741:1;1737:5;;1732:66;1748:2;;:9;;1744:1;:13;1732:66;;;1796:1;1788:2;;1791:1;1788:5;;;;;;;;;;;;;:9;1780:18;;;;;;1759:3;;;;;1732:66;;;1631:178;1819:1;1826:2;;1819:10;;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1819:10:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1839:1;1846:2;;1839:10;;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1839:10:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;883:1:6;1350:506:18;;;;:::o;1347:137:6:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;1078:20:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;659:77:6:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;196:61:21:-;241:9;246:3;241:4;:9::i;:::-;196:61;:::o;1154:18:18:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1130:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1655:107:6:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1104:20:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2290:1547::-;2350:1;:8;;;;2344:3;:14;2336:23;;;;;;2369:9;2405:1;2393;2395:3;2393:6;;;;;;;;;;;;;;;2400:1;2393:9;;;;;;;;;;;;;;;;:13;2389:1442;;;2494:11;2564:1;2566:3;2564:6;;;;;;;;;;;;;;;2571:1;2564:9;;;;;;;;;;;;;;;;2514:1;2516:3;2514:6;;;;;;;;;;;;;;;2521:1;2514:9;;;;;;;;;;;;;;;;;;;;;;;;;2508:26;;;2535:10;2555:4;2508:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2508:53:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2508:53:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2508:53:18;;;;;;;;;;;;;;;;:65;;;;;;2494:79;;2601:1;2595:3;:7;2587:16;;;;;;2654:1;2650:5;;2645:114;2661:1;2663:3;2661:6;;;;;;;;;;;;;;;:13;;;;2657:1;:17;2645:114;;;2711:1;2713:3;2711:6;;;;;;;;;;;;;;;2718:1;2711:9;;;;;;;;;;;;;;;;;;;;;;;;;2697:33;;;2731:10;2749:1;2751:3;2749:6;;;;;;;;;;;;;;;2756:1;2749:9;;;;;;;;;;;;;;;;2743:3;:15;2697:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2697:62:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2697:62:18;;;;2676:3;;;;;2645:114;;;2810:1;2806:5;;2801:95;2817:1;:8;;;;2813:1;:12;2801:95;;;2848:48;2873:10;2892:3;2885:1;2887;2885:4;;;;;;;;;;;;;;;;:10;2854:1;2856;2854:4;;;;;;;;;;;;;;;;;;;;;;;;;2848:24;;;;:48;;;;;:::i;:::-;2827:3;;;;;2801:95;;;2389:1442;;;;3297:1;3280;3282:3;3280:6;;;;;;;;;;;;;;;:13;;;;:18;:35;;;;;3314:1;3302;:8;;;;:13;3280:35;3272:44;;;;;;3331:20;3368:1;3370:3;3368:6;;;;;;;;;;;;;;;3375:1;3368:9;;;;;;;;;;;;;;;;;;;;;;;;;3331:47;;3392:10;3411:1;3413;3411:4;;;;;;;;;;;;;;;;;;;;;;;;;3392:24;;3431:13;3490:6;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3490:20:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3490:20:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3490:20:18;;;;;;;;;;;;;;;;3458:4;:14;;;3481:4;3458:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3458:29:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3458:29:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3458:29:18;;;;;;;;;;;;;;;;3447:8;:40;:63;;;;;;3431:79;;3525:17;3545:6;:16;;;3562:10;3582:4;3545:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3545:43:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3545:43:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3545:43:18;;;;;;;;;;;;;;;;3525:63;;3622:1;3610:9;:13;3602:22;;;;;;3638:6;:15;;;3654:10;3666:9;3638:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3638:38:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3638:38:18;;;;3691:14;3728:8;3716:9;3708:5;:17;:28;;;;;;3691:45;;3767:1;3758:6;:10;3750:19;;;;;;3783:37;3801:10;3813:6;3783:4;:17;;;;:37;;;;;:::i;:::-;2389:1442;;;;;;2290:1547;;:::o;1906:183:6:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;409:123:12:-;499:5;:14;;;514:2;518:5;499:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:25:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;499:25:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;499:25:12;;;;;;;;;;;;;;;;491:34;;;;;;409:123;;;:::o;56:203:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport './AbstractAmbix.sol';\n\ncontract PublicAmbix is AbstractAmbix {\n    /**\n     * @dev Run distillation process\n     * @param _ix Source alternative index\n     */\n    function run(uint256 _ix) external {\n        _run(_ix);\n    }\n}\n",
  "sourcePath": "/home/tubleronchik/work/neon_robonomics_contracts/robonomics_contracts/contracts/misc/PublicAmbix.sol",
  "ast": {
    "absolutePath": "project:/contracts/misc/PublicAmbix.sol",
    "exportedSymbols": {
      "PublicAmbix": [
        3090
      ]
    },
    "id": 3091,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3076,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:21"
      },
      {
        "absolutePath": "project:/contracts/misc/AbstractAmbix.sol",
        "file": "./AbstractAmbix.sol",
        "id": 3077,
        "nodeType": "ImportDirective",
        "scope": 3091,
        "sourceUnit": 2524,
        "src": "25:29:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3078,
              "name": "AbstractAmbix",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2523,
              "src": "80:13:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractAmbix_$2523",
                "typeString": "contract AbstractAmbix"
              }
            },
            "id": 3079,
            "nodeType": "InheritanceSpecifier",
            "src": "80:13:21"
          }
        ],
        "contractDependencies": [
          849,
          2523
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3090,
        "linearizedBaseContracts": [
          3090,
          2523,
          849
        ],
        "name": "PublicAmbix",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3088,
              "nodeType": "Block",
              "src": "231:26:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3085,
                        "name": "_ix",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3081,
                        "src": "246:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3084,
                      "name": "_run",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2522,
                      "src": "241:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "241:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3087,
                  "nodeType": "ExpressionStatement",
                  "src": "241:9:21"
                }
              ]
            },
            "documentation": "@dev Run distillation process\n@param _ix Source alternative index",
            "id": 3089,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "run",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3081,
                  "name": "_ix",
                  "nodeType": "VariableDeclaration",
                  "scope": 3089,
                  "src": "209:11:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3080,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "209:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "208:13:21"
            },
            "returnParameters": {
              "id": 3083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:0:21"
            },
            "scope": 3090,
            "src": "196:61:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3091,
        "src": "56:203:21"
      }
    ],
    "src": "0:260:21"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/misc/PublicAmbix.sol",
      "exportedSymbols": {
        "PublicAmbix": [
          3090
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 3076,
        "name": "PragmaDirective",
        "src": "0:23:21"
      },
      {
        "attributes": {
          "SourceUnit": 2524,
          "absolutePath": "project:/contracts/misc/AbstractAmbix.sol",
          "file": "./AbstractAmbix.sol",
          "scope": 3091,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3077,
        "name": "ImportDirective",
        "src": "25:29:21"
      },
      {
        "attributes": {
          "contractDependencies": [
            849,
            2523
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3090,
            2523,
            849
          ],
          "name": "PublicAmbix",
          "scope": 3091
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "AbstractAmbix",
                  "referencedDeclaration": 2523,
                  "type": "contract AbstractAmbix"
                },
                "id": 3078,
                "name": "UserDefinedTypeName",
                "src": "80:13:21"
              }
            ],
            "id": 3079,
            "name": "InheritanceSpecifier",
            "src": "80:13:21"
          },
          {
            "attributes": {
              "documentation": "@dev Run distillation process\n@param _ix Source alternative index",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "run",
              "scope": 3090,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_ix",
                      "scope": 3089,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3080,
                        "name": "ElementaryTypeName",
                        "src": "209:7:21"
                      }
                    ],
                    "id": 3081,
                    "name": "VariableDeclaration",
                    "src": "209:11:21"
                  }
                ],
                "id": 3082,
                "name": "ParameterList",
                "src": "208:13:21"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3083,
                "name": "ParameterList",
                "src": "231:0:21"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2522,
                              "type": "function (uint256)",
                              "value": "_run"
                            },
                            "id": 3084,
                            "name": "Identifier",
                            "src": "241:4:21"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3081,
                              "type": "uint256",
                              "value": "_ix"
                            },
                            "id": 3085,
                            "name": "Identifier",
                            "src": "246:3:21"
                          }
                        ],
                        "id": 3086,
                        "name": "FunctionCall",
                        "src": "241:9:21"
                      }
                    ],
                    "id": 3087,
                    "name": "ExpressionStatement",
                    "src": "241:9:21"
                  }
                ],
                "id": 3088,
                "name": "Block",
                "src": "231:26:21"
              }
            ],
            "id": 3089,
            "name": "FunctionDefinition",
            "src": "196:61:21"
          }
        ],
        "id": 3090,
        "name": "ContractDefinition",
        "src": "56:203:21"
      }
    ],
    "id": 3091,
    "name": "SourceUnit",
    "src": "0:260:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x06d77D039a6bD049fc9E651b7ecBB2694AC1F96f",
      "transactionHash": "0xf3bb538c49e9d7500cdc3f04a01670e0ec9dcc6264170bd927d4c08ca37f2ead"
    },
    "245022926": {
      "events": {},
      "links": {},
      "address": "0xA20C06e4e06734abb3f771aA8C0D028658CC50Ef",
      "transactionHash": "0xca1f8e8bf28a34abcb438e951f705ae7ec9e2050666c57a27c9a49817209b9c6"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-05T11:54:12.349Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "appendSource(address[],uint256[])": {
        "details": "Append token recipe source alternative",
        "params": {
          "_a": "Token recipe source token addresses",
          "_n": "Token recipe source token counts*"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "run(uint256)": {
        "details": "Run distillation process",
        "params": {
          "_ix": "Source alternative index"
        }
      },
      "setSink(address[],uint256[])": {
        "details": "Set sink of token recipe",
        "params": {
          "_b": "Token recipe sink token list",
          "_m": "Token recipe sink token counts"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}